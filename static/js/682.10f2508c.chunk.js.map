{"version":3,"file":"static/js/682.10f2508c.chunk.js","mappings":"mLAMaA,EAAe,SAACC,GAC7B,IAAMC,EAAU,CACdC,OAAQ,MACRF,IAAI,GAADG,OAPY,gCAOCA,OAAGH,GACnBI,OAAQ,CAACC,SAAU,SACnBC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAADL,OATC,yNAad,OAAOM,EAAAA,EAAAA,QAAcR,EAGzB,C,2KClBaS,EAAWC,EAAAA,GAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oDAKnBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sKAWpBG,EAAWL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oHAOpBK,EAAYP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oDAKpBO,EAAOT,EAAAA,GAAAA,KAAWU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wG,SCwB/B,EA/Ca,WACX,IAAAS,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC1BI,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACgB,OAA5BL,EAAQ,UAAAjC,OAAayB,EAAO,YAAAW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEb1C,EAAAA,EAAAA,GAAaqC,GAAU,KAAD,EAAnCC,EAAIE,EAAAG,KACFJ,EAASD,EAAKA,KAAdC,KACRX,EAAeW,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAErBK,QAAQC,IAAGN,EAAAI,IAAM,yBAAAJ,EAAAO,OAAA,GAAAX,EAAA,kBAEpB,kBATgB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAUjBjB,GACF,GAAG,CAACH,KAGFqB,EAAAA,EAAAA,KAACnC,EAAQ,CAAAoC,SACkB,KAAb,OAAXxB,QAAW,IAAXA,OAAW,EAAXA,EAAayB,SACZF,EAAAA,EAAAA,KAAA,KAAAC,SAAG,sCAEQ,OAAXxB,QAAW,IAAXA,OAAW,EAAXA,EAAa0B,KAAI,SAAAC,GAAE,OACjBC,EAAAA,EAAAA,MAACtC,EAAQ,CAAAkC,SAAA,EACPD,EAAAA,EAAAA,KAAA,OACEM,IACEF,EAAGG,aAAY,kCAAArD,OACuBkD,EAAGG,cACrCC,EAAAA,EAENC,MAAM,QACNC,IAAKN,EAAGO,QAEVX,EAAAA,EAAAA,KAACvC,EAAQ,CAAAwC,SAAEG,EAAGO,OACbP,EAAGQ,YACFP,EAAAA,EAAAA,MAACpC,EAAS,CAAAgC,SAAA,CAAC,cACCD,EAAAA,EAAAA,KAAC7B,EAAI,CAAA8B,SAAEG,EAAGQ,iBAbXR,EAAGO,KAgBP,KAKrB,C,sDCpDO,IAAMH,EAAe,6E","sources":["Services/request.js","components/Cast/CastStyle.jsx","components/Cast/Cast.jsx","components/DefaulImage/ingex.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n//const API_KEY  = '56e623a6364593e332f15c43c9af7ecb';\nconst AccesToken =\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NmU2MjNhNjM2NDU5M2UzMzJmMTVjNDNjOWFmN2VjYiIsInN1YiI6IjY1NGU0YzdjZDRmZTA0MDEzOTdlOWYzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.oK_oZo1_t8pppztjX3lzPujAHltYYfjqlIqEp2mLhOQ\"\n\nexport const FetchRequest = (url) => {\nconst options = {\n  method: 'GET',\n  url: `${BASE_URL}${url}`,\n  params: {language: 'en-US'},\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${AccesToken}`\n  }\n};\n\n    return axios.request(options);\n    //axios.get(`${BASE_URL}${url}?api_key=Bearer ${API_KEY}?language:en-US`);\n    \n};\n\n\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });","import styled from 'styled-components';\n\nexport const MainName = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const ListCast = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  row-gap: 20px;\n  column-gap: 14px;\n\n  list-style: none;\n  padding: 0;\n  color: #3b0d5e;\n`;\n\nexport const ItemCast = styled.li`\n  width: 200px;\n  margin-bottom: 20px;\n  border-bottom: 3px solid;\n  border-color: rgb(230, 34, 203);\n`;\n\nexport const Character = styled.p`\n  font-size: 15px;\n  font-weight: bold;\n`;\n\nexport const Name = styled.span`\n  font-size: 16px;\n\n  font-weight: bold;\n  margin-left: 4px;\n  color: rgb(230, 34, 203);\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FetchRequest } from 'Services/request';\nimport { DefaultImage } from 'components/DefaulImage/ingex';\n\nimport { Name, ListCast, ItemCast, MainName, Character } from './CastStyle';\n\nconst Cast = () => {\n  const [castDetails, setCastDetails] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const requestCast = async () => {\n      const URL_CAST = `/movie/${movieId}/credits`;\n      try {\n        const data = await FetchRequest(URL_CAST);\n        const { cast } = data.data;\n        setCastDetails(cast);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    requestCast();\n  }, [movieId]);\n\n  return (\n    <ListCast>\n      {castDetails?.length === 0 ? (\n        <p>We don't have cast of this movie </p>\n      ) : (\n        castDetails?.map(el => (\n          <ItemCast key={el.name}>\n            <img\n              src={\n                el.profile_path\n                  ? `https://image.tmdb.org/t/p/w300${el.profile_path}`\n                  : DefaultImage\n              }\n              width=\"200px\"\n              alt={el.name}\n            />\n            <MainName>{el.name}</MainName>\n            {el.character && (\n              <Character>\n                Character:<Name>{el.character}</Name>\n              </Character>\n            )}\n          </ItemCast>\n        ))\n      )}\n    </ListCast>\n  );\n};\n\nexport default Cast;\n","export const DefaultImage = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';"],"names":["FetchRequest","url","options","method","concat","params","language","headers","accept","Authorization","axios","MainName","styled","_templateObject","_taggedTemplateLiteral","ListCast","_templateObject2","ItemCast","_templateObject3","Character","_templateObject4","Name","_templateObject5","_useState","useState","_useState2","_slicedToArray","castDetails","setCastDetails","movieId","useParams","useEffect","requestCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","URL_CAST","data","cast","_context","prev","next","sent","t0","console","log","stop","apply","arguments","_jsx","children","length","map","el","_jsxs","src","profile_path","DefaultImage","width","alt","name","character"],"sourceRoot":""}