{"version":3,"file":"static/js/608.70500e74.chunk.js","mappings":"mLAMaA,EAAe,SAACC,GAC7B,IAAMC,EAAU,CACdC,OAAQ,MACRF,IAAI,GAADG,OAPY,gCAOCA,OAAGH,GACnBI,OAAQ,CAACC,SAAU,SACnBC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAADL,OATC,yNAad,OAAOM,EAAAA,EAAAA,QAAcR,EAGzB,C,oKClBaS,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iEAMvBC,EAAcH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yFAMvBG,EAAaL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oDAKrBK,EAAeP,EAAAA,GAAAA,KAAWQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wGAQ1BO,EAAUT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qDAKlBS,EAAYX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mD,SCgBjC,EAnCgB,WACd,IAAAW,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBI,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACkB,OAA/BL,EAAW,UAAAnC,OAAa2B,EAAO,YAAAW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEhB5C,EAAAA,EAAAA,GAAauC,GAAa,KAAD,EAAtCC,EAAIE,EAAAG,KACFJ,EAAYD,EAAKA,KAAjBC,QACRX,EAAWW,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAEpBK,QAAQC,IAAGN,EAAAI,IAAM,yBAAAJ,EAAAO,OAAA,GAAAX,EAAA,kBAEpB,kBATiB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAUlBjB,GACF,GAAG,CAACH,KAEFqB,EAAAA,EAAAA,KAACzC,EAAW,CAAA0C,SACW,KAAb,OAAPxB,QAAO,IAAPA,OAAO,EAAPA,EAASyB,SACRF,EAAAA,EAAAA,KAAC7B,EAAS,CAAA8B,SAAC,8CAEJ,OAAPxB,QAAO,IAAPA,OAAO,EAAPA,EAAS0B,KAAI,SAAAC,GAAE,OACbC,EAAAA,EAAAA,MAAC1C,EAAW,CAAAsC,SAAA,EACVI,EAAAA,EAAAA,MAACxC,EAAU,CAAAoC,SAAA,CAAC,YACFD,EAAAA,EAAAA,KAACjC,EAAY,CAAAkC,SAAEG,EAAGE,aAE5BN,EAAAA,EAAAA,KAAC/B,EAAO,CAAAgC,SAAEG,EAAGG,YAJGH,EAAGE,OAKP,KAKxB,C","sources":["Services/request.js","components/Reviews/ReviewsStyle.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n//const API_KEY  = '56e623a6364593e332f15c43c9af7ecb';\nconst AccesToken =\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1NmU2MjNhNjM2NDU5M2UzMzJmMTVjNDNjOWFmN2VjYiIsInN1YiI6IjY1NGU0YzdjZDRmZTA0MDEzOTdlOWYzZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.oK_oZo1_t8pppztjX3lzPujAHltYYfjqlIqEp2mLhOQ\"\n\nexport const FetchRequest = (url) => {\nconst options = {\n  method: 'GET',\n  url: `${BASE_URL}${url}`,\n  params: {language: 'en-US'},\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${AccesToken}`\n  }\n};\n\n    return axios.request(options);\n    //axios.get(`${BASE_URL}${url}?api_key=Bearer ${API_KEY}?language:en-US`);\n    \n};\n\n\n\n// axios\n//   .request(options)\n//   .then(function (response) {\n//     console.log(response.data);\n//   })\n//   .catch(function (error) {\n//     console.error(error);\n//   });","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  color: #3b0d5e;\n  padding: 0;\n`;\n\nexport const ReviewsItem = styled.li`\n  padding-right: 20px;\n  border-bottom: 2px solid;\n  border-color: #743ad5;\n`;\n\nexport const RevAuchtor = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const RevAutorName = styled.span`\n  font-size: 16px;\n\n  font-weight: bold;\n  margin-left: 4px;\n  color: rgb(230, 34, 203);\n`;\n\nexport const RevText = styled.p`\n  font-weight: bold;\n  line-height: 1.5;\n`;\n\nexport const NoReviews = styled.p`\n  font-weight: bold;\n  color: #3b0d5e;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FetchRequest } from 'Services/request';\n\nimport {\n  ReviewsList,\n  ReviewsItem,\n  RevAuchtor,\n  RevAutorName,\n  RevText,\n  NoReviews,\n} from './ReviewsStyle';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      const URL_REVIEWS = `/movie/${movieId}/reviews`;\n      try {\n        const data = await FetchRequest(URL_REVIEWS);\n        const { results } = data.data;\n        setReviews(results);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    movieReviews();\n  }, [movieId]);\n  return (\n    <ReviewsList>\n      {reviews?.length === 0 ? (\n        <NoReviews>We don't have any rewievs for this movie </NoReviews>\n      ) : (\n        reviews?.map(el => (\n          <ReviewsItem key={el.author}>\n            <RevAuchtor>\n              Author: <RevAutorName>{el.author}</RevAutorName>\n            </RevAuchtor>\n            <RevText>{el.content}</RevText>\n          </ReviewsItem>\n        ))\n      )}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n"],"names":["FetchRequest","url","options","method","concat","params","language","headers","accept","Authorization","axios","ReviewsList","styled","_templateObject","_taggedTemplateLiteral","ReviewsItem","_templateObject2","RevAuchtor","_templateObject3","RevAutorName","_templateObject4","RevText","_templateObject5","NoReviews","_templateObject6","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","movieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","URL_REVIEWS","data","results","_context","prev","next","sent","t0","console","log","stop","apply","arguments","_jsx","children","length","map","el","_jsxs","author","content"],"sourceRoot":""}